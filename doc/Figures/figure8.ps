%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 72 72 540 720
%%Creator: Mathematica
%%CreationDate: Tue Nov 12 21:22:17 PST 1996
%%EndComments

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

%%AspectRatio: .61803 
MathPictureStart
%% Graphics
/Courier findfont 15  scalefont  setfont
% Scaling calculations
0.0238095 47.619 0.309017 0.0294302 [
[(0.005)] .2619 .30902 0 2 Msboxa
[(0.01)] .5 .30902 0 2 Msboxa
[(0.015)] .7381 .30902 0 2 Msboxa
[(0.02)] .97619 .30902 0 2 Msboxa
[(-10)] .01131 .01472 1 0 Msboxa
[(-5)] .01131 .16187 1 0 Msboxa
[(5)] .01131 .45617 1 0 Msboxa
[(10)] .01131 .60332 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.2619 .30902 m
.2619 .31527 L
s
P
[(0.005)] .2619 .30902 0 2 Mshowa
p
.002 w
.5 .30902 m
.5 .31527 L
s
P
[(0.01)] .5 .30902 0 2 Mshowa
p
.002 w
.7381 .30902 m
.7381 .31527 L
s
P
[(0.015)] .7381 .30902 0 2 Mshowa
p
.002 w
.97619 .30902 m
.97619 .31527 L
s
P
[(0.02)] .97619 .30902 0 2 Mshowa
p
.001 w
.07143 .30902 m
.07143 .31277 L
s
P
p
.001 w
.11905 .30902 m
.11905 .31277 L
s
P
p
.001 w
.16667 .30902 m
.16667 .31277 L
s
P
p
.001 w
.21429 .30902 m
.21429 .31277 L
s
P
p
.001 w
.30952 .30902 m
.30952 .31277 L
s
P
p
.001 w
.35714 .30902 m
.35714 .31277 L
s
P
p
.001 w
.40476 .30902 m
.40476 .31277 L
s
P
p
.001 w
.45238 .30902 m
.45238 .31277 L
s
P
p
.001 w
.54762 .30902 m
.54762 .31277 L
s
P
p
.001 w
.59524 .30902 m
.59524 .31277 L
s
P
p
.001 w
.64286 .30902 m
.64286 .31277 L
s
P
p
.001 w
.69048 .30902 m
.69048 .31277 L
s
P
p
.001 w
.78571 .30902 m
.78571 .31277 L
s
P
p
.001 w
.83333 .30902 m
.83333 .31277 L
s
P
p
.001 w
.88095 .30902 m
.88095 .31277 L
s
P
p
.001 w
.92857 .30902 m
.92857 .31277 L
s
P
p
.002 w
0 .30902 m
1 .30902 L
s
P
p
.002 w
.02381 .01472 m
.03006 .01472 L
s
P
[(-10)] .01131 .01472 1 0 Mshowa
p
.002 w
.02381 .16187 m
.03006 .16187 L
s
P
[(-5)] .01131 .16187 1 0 Mshowa
p
.002 w
.02381 .45617 m
.03006 .45617 L
s
P
[(5)] .01131 .45617 1 0 Mshowa
p
.002 w
.02381 .60332 m
.03006 .60332 L
s
P
[(10)] .01131 .60332 1 0 Mshowa
p
.001 w
.02381 .04415 m
.02756 .04415 L
s
P
p
.001 w
.02381 .07358 m
.02756 .07358 L
s
P
p
.001 w
.02381 .10301 m
.02756 .10301 L
s
P
p
.001 w
.02381 .13244 m
.02756 .13244 L
s
P
p
.001 w
.02381 .1913 m
.02756 .1913 L
s
P
p
.001 w
.02381 .22073 m
.02756 .22073 L
s
P
p
.001 w
.02381 .25016 m
.02756 .25016 L
s
P
p
.001 w
.02381 .27959 m
.02756 .27959 L
s
P
p
.001 w
.02381 .33845 m
.02756 .33845 L
s
P
p
.001 w
.02381 .36788 m
.02756 .36788 L
s
P
p
.001 w
.02381 .39731 m
.02756 .39731 L
s
P
p
.001 w
.02381 .42674 m
.02756 .42674 L
s
P
p
.001 w
.02381 .4856 m
.02756 .4856 L
s
P
p
.001 w
.02381 .51503 m
.02756 .51503 L
s
P
p
.001 w
.02381 .54446 m
.02756 .54446 L
s
P
p
.001 w
.02381 .57389 m
.02756 .57389 L
s
P
p
.002 w
.02381 0 m
.02381 .61803 L
s
P
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.004 w
.02381 .60332 m
.02505 .6033 L
.02629 .60326 L
.02753 .60319 L
.02877 .60309 L
.03125 .60281 L
.03373 .60241 L
.03621 .6019 L
.03869 .60128 L
.04365 .5997 L
.04861 .59766 L
.05357 .59519 L
.06349 .58891 L
.08333 .57124 L
.10317 .54711 L
.14286 .482 L
.18254 .39996 L
.22222 .30902 L
.2619 .21807 L
.30159 .13603 L
.32143 .10091 L
.34127 .07092 L
.36111 .04679 L
.37103 .03712 L
.38095 .02912 L
.39087 .02285 L
.39583 .02037 L
.40079 .01834 L
.40575 .01676 L
.40823 .01613 L
.41071 .01562 L
.41319 .01523 L
.41443 .01507 L
.41567 .01494 L
.41691 .01484 L
.41815 .01477 L
.41939 .01473 L
.42063 .01472 L
.42187 .01473 L
.42312 .01477 L
.42436 .01484 L
.4256 .01494 L
.42808 .01523 L
.43056 .01562 L
.43304 .01613 L
.43552 .01676 L
.44048 .01834 L
.44544 .02037 L
.4504 .02285 L
.46032 .02912 L
Mistroke
.48016 .04679 L
.5 .07092 L
.53968 .13603 L
.57937 .21807 L
.61905 .30902 L
.65873 .39996 L
.69841 .482 L
.71825 .51712 L
.7381 .54711 L
.75794 .57124 L
.76786 .58092 L
.77778 .58891 L
.7877 .59519 L
.79266 .59766 L
.79762 .5997 L
.80258 .60128 L
.80506 .6019 L
.80754 .60241 L
.81002 .60281 L
.81126 .60296 L
.8125 .60309 L
.81374 .60319 L
.81498 .60326 L
.81622 .6033 L
.81746 .60332 L
.8187 .6033 L
.81994 .60326 L
.82118 .60319 L
.82242 .60309 L
.8249 .60281 L
.82738 .60241 L
.82986 .6019 L
.83234 .60128 L
.8373 .5997 L
.84226 .59766 L
.84722 .59519 L
.85714 .58891 L
.87698 .57124 L
.89683 .54711 L
.93651 .482 L
.97619 .39996 L
Mfstroke
P
P
p
[ .01 .01 ] 0 setdash
p
.004 w
.02381 .51292 m
.03373 .52152 L
.04365 .52882 L
.05357 .53476 L
.05853 .53721 L
.06349 .53931 L
.06845 .54106 L
.07341 .54244 L
.07589 .543 L
.07837 .54347 L
.08085 .54385 L
.08209 .544 L
.08333 .54414 L
.08457 .54425 L
.08581 .54433 L
.08705 .5444 L
.08829 .54444 L
.08953 .54446 L
.09077 .54445 L
.09201 .54443 L
.09325 .54438 L
.09449 .54431 L
.09573 .54421 L
.09821 .54395 L
.10069 .54361 L
.10317 .54317 L
.10813 .54202 L
.1131 .54052 L
.12302 .53644 L
.13294 .53095 L
.14286 .5241 L
.1627 .50647 L
.18254 .48398 L
.22222 .42674 L
.2619 .35797 L
.30159 .28441 L
.34127 .21325 L
.38095 .15148 L
.40079 .12604 L
.42063 .10512 L
.43056 .09651 L
.44048 .08921 L
.4504 .08327 L
.45536 .08082 L
.46032 .07872 L
.46528 .07698 L
.47024 .07559 L
.47272 .07503 L
.4752 .07456 L
.47768 .07419 L
Mistroke
.48016 .0739 L
.4814 .07379 L
.48264 .0737 L
.48388 .07364 L
.48512 .0736 L
.48636 .07358 L
.4876 .07358 L
.48884 .07361 L
.49008 .07366 L
.49132 .07373 L
.49256 .07382 L
.49504 .07408 L
.49752 .07443 L
.5 .07487 L
.50496 .07601 L
.50992 .07752 L
.51984 .0816 L
.52976 .08708 L
.53968 .09393 L
.55952 .11156 L
.57937 .13405 L
.61905 .1913 L
.65873 .26007 L
.69841 .33363 L
.7381 .40478 L
.77778 .46656 L
.79762 .49199 L
.81746 .51292 L
.82738 .52152 L
.8373 .52882 L
.84722 .53476 L
.85218 .53721 L
.85714 .53931 L
.8621 .54106 L
.86706 .54244 L
.86954 .543 L
.87202 .54347 L
.8745 .54385 L
.87574 .544 L
.87698 .54414 L
.87822 .54425 L
.87946 .54433 L
.8807 .5444 L
.88194 .54444 L
.88318 .54446 L
.88442 .54445 L
.88566 .54443 L
.8869 .54438 L
.88814 .54431 L
.88938 .54421 L
Mistroke
.89187 .54395 L
.89435 .54361 L
.89683 .54317 L
.90179 .54202 L
.90675 .54052 L
.91667 .53644 L
.92659 .53095 L
.93651 .5241 L
.95635 .50647 L
.97619 .48398 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
